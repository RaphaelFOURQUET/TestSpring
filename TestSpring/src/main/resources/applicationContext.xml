<?xml version="1.0" encoding="utf-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- IoC  -->

	<!-- Déclaration bean Saxophone -->
	<bean id="saxophone" class="fr.adaming.entity.Saxophone">
		<property name="name" value="saxophone"/>
	</bean>
	
	<!-- Déclaration bean Piano -->
	<bean id="piano" class="fr.adaming.entity.Piano">
		<property name="name" value="piano"/>
	</bean>
	
	<!-- Déclaration bean Musicien -->
	<bean name="Douglas" class="fr.adaming.entity.Musicien">
		<property name="name" value="Douglas"/>
		<property name="morceau" value="Vive le vent"/>
		<property name="instrument" ref="piano"/>
	</bean>
	
	<bean name="Jack" class="fr.adaming.entity.Musicien">
		<property name="name" value="Jack"/>
		<property name="morceau" value="musiqueNulle"/>
		<property name="instrument" ref="saxophone"/>
	</bean>
	
	
	<!-- Configuration AOP XML -->
	
	<bean id="spectateurs" class="fr.adaming.service.Spectateurs" />
	
	<aop:config>
		<aop:pointcut id="servicePointcut"
			expression="execution(* *.performe(..))" />	<!-- .. : avec ou sans arguments acceptés / * *  : le premier * pour type de retour, le second pour préciser n'importe quel appelant.-->
			
		<aop:aspect id="spectateursAspect" ref="spectateurs">
			<aop:before method="prendPlace" pointcut-ref="servicePointcut"/>
			<aop:after-throwing method="demandeRemboursement" pointcut-ref="servicePointcut"/>
			<aop:after-returning method="applaudit" returning="result" pointcut-ref="servicePointcut"/>
		</aop:aspect>
	
	</aop:config>
	
	<!-- Fin Configuration AOP XML -->
	
	<!-- Configuration AOP par annotation -->
	<bean id="spectateursAnnote" class="fr.adaming.service.SpectateursAnnote" />
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>	<!-- ??? -->
	
	<aop:config>
		<aop:aspect ref="spectateursAnnote"/>
	</aop:config>
	
	<!-- Fin Configuration AOP par annotation -->
	
	<!-- JDBCTemplate dans DAO -->
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location">
        	<value>database.properties</value>
    	</property>
	</bean>
	
	<!-- Declaration Session Factory Hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>domaine/Musicien.hbm.xml</value>	<!-- Fichier de mapping classe -> Table  -->
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>
	</bean>
	
 	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- <bean id="hibernateMusicienDAO"
		class="fr.adaming.dao.HibernateMusicienDAO">
 		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean> -->

</beans>
